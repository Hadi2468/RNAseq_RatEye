#################################################
setwd("../"); getwd()
library(mgcv)
install.packages(mgcv-package)
install.packages("mgcv")
install.packages("mgcv")
library(mgcv)
install.packages("nlme")
install.packages("nlme")
library(mgcv)
install.packages("mgcv-package")
install.packages("mgcv")
install.packages("mgcv")
library(mgcv)
install.packages("gam")
library(mgcv)
install.packages("gam")
library(mgcv)
library(ggplot2)
# fake data
n <- 50
sig <- 2
dat <- gamSim(1,n=n,scale=sig)
View(dat)
plot(dat$x1)
plot(dat$x2)
plot(dat$x3)
plot(dat$x3, dat$x0)
plot(dat$x3, dat$x1)
# P-spline smoothers (with lambda=0.6) used for x1 and x2; x3 is parametric.
b1 <- mgcv::gam(y ~ s(x1, bs='ps', sp=0.6) + s(x2, bs='ps', sp=0.6) + x3, data = dat)
summary(b1)
plot(b1)
bb1 <- mgcv::gam(y ~ x1 + x2 + x3, data = dat)
summary(bb1)
plot(bb1)
bb1 <- mgcv::gam(y ~ s(x1) + s(x2) + s(x3), data = dat)
summary(bb1)
plot(bb1)
beta <- coef(b1)[grepl("x1", names(coef(b1)))]
s <- p[,grepl("x1", colnames(p))] %*% beta
ggplot(data=cbind.data.frame(s, dat$x1), aes(x=dat$x1, y=s)) + geom_line()
# predict
newdf <- gamSim(1,n=n,scale=sig)
f <- predict(b1, newdata=newdf)
# select smoothing parameters with REML, using P-splines
b2 <- mgcv::gam(y ~ s(x1, bs='ps') + s(x2, bs='ps') + x3, data = dat, method="REML")
# select variables and smoothing parameters
b3 <- mgcv::gam(y ~ s(x0) + s(x1) + s(x2) + s(x3) , data = dat, method="REML", select=TRUE)
# loess smoothers with the gam package (restart R before loading gam)
library(gam)
b4 <- gam::gam(y ~ lo(x1, span=0.6) + lo(x2, span=0.6) + x3, data = dat)
gam(dat ~ s(x1), data = dat, method = "REML")
gam(dat$y ~ s(x1), data = dat, method = "REML")
gam(dat$y ~ s(x1), data = dat)
plot(dat$y)
plot(dat$y, dat$x1)
mm<- gam(dat$y ~ s(x1), data = dat)
plot(mm)
plot(dat$y, dat$x1)
plot(dat$x1, dat$y)
plot(mm)
plot(dat$x1, dat$y)
plot(mm)
plot(dat$x1, dat$y)
plot(mm)
mm<- gam(dat$y ~ x1, data = dat)
plot(dat$x1, dat$y)
plot(mm)
par(mfrow = c(2,2))
gam.check(mm)
par(mfrow = c(1,1))
gam.check(mm)
Packages <- c("tximport", "tximportData", "DESeq2", "tidyverse", "dplyr", "vctrs", "fs", "ggplot2",
"kader", "remotes", "nlcor", "corrplot", "RColorBrewer", "ggpubr", "pheatmap", "NNS",
"ppcor", "BBmisc", "rcompanion", "caret", "moments", "devtools", "readxl", "mgcv")
lapply(Packages, library, character.only=TRUE)
####################################################
### Step 1: Import 45 samples' information files ###
####################################################
getwd()
setwd("./Data"); getwd()
# samples <- read.csv("samples53.csv", sep=",", header=TRUE)
sub_samples <- read.csv("samples45.csv", sep=",", header=TRUE)
dim(sub_samples)
# sub_genes_2 <- read.csv("normalized_log2.csv", sep=",", header=TRUE)
# dim(sub_genes_2)
# sub_genes_r <- read.csv("normalized_rlog.csv", sep=",", header=TRUE)
# sub_genes_r <- read.csv("normalized_rlog_IOP.csv", sep=",", header=TRUE)     # Genes + IOP
sub_genes_r <- read.csv("normalized_rlog_Michael.csv", sep=",", header=TRUE)   # Solution by Michael Love
dim(sub_genes_r)
# selGenes <- subset(sub_genes_2, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
selGenes <- subset(sub_genes_r, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
corrTable <- cbind(sub_samples$Avg_IOP, selGenes)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK")
# names(corrTable) <- c("IOP", "IOP_norm", "ANGPT2", "PTPRB", "TEK")
summary(corrTable)     # Basic statistical analysis
plot(corrTable$IOP, corrTable$ANGPT2)
plot(corrTable$ANGPT2, corrTable$IOP)
plot(corrTable$IOP, corrTable$ANGPT2)
######## Spearman Correlatoin ########
corrplot(cor(corrTable, method="spearman"), method="color", type="upper", order="hclust",
col=colorRampPalette(c("dodgerblue", "aliceblue", "brown1"))(7),
addCoef.col="black", tl.col="black", tl.cex=1, addrect=3)
mm <- gam(corrTable$IOP ~ s(ANGPT2), data=corrTable)
plot(mm)
gam.check(mm)
#################### NonLinear Correlatoin (nlcor) ####################
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.7, plt=T)
nlcor(corrTable$IOP, corrTable$IOP)
nlcor(corrTable$IOP, corrTable$ANGPT2)
nlcor(corrTable$IOP, corrTable$PTPRB)
nlcor(corrTable$IOP, corrTable$TEK)
nlcor(corrTable$ANGPT2, corrTable$IOP)
nlcor(corrTable$ANGPT2, corrTable$ANGPT2)
nlcor(corrTable$ANGPT2, corrTable$PTPRB)
nlcor(corrTable$ANGPT2, corrTable$TEK)
nlcor(corrTable$PTPRB, corrTable$IOP)
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)       # R=0.3664747    p=0.006690839
######## Spearman Correlatoin ########
plot(corrTable$IOP, corrTable$ANGPT2)
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)       # R=0.3664747    p=0.006690839
plot(corrTable$PTPRB, corrTable$ANGPT2)
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)       # R=0.3664747    p=0.006690839
plot(corrTable$PTPRB, corrTable$ANGPT2)
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$TEK, corrTable$IOP, plt=T)            # R=0.4438115     p=0.01823332
plot(corrTable$PTPRB, corrTable$ANGPT2)
nlcor(corrTable$TEK, corrTable$IOP, plt=T)            # R=0.4438115     p=0.01823332
nlcor(corrTable$TEK, corrTable$PTPRB, plt=T)          # R=0.3986897     p=0.01190667
##################### NonLinear Correlatoin (NNS) ##################################################
## Nonlinear Nonparametric Statistics (NNS) using partial moments.                                ##
## Partial moments are the elements of variance and asymptotically approximate the area of f(x).  ##
## NNS offers Nonlinear Correlation & Dependence analysis.                                        ##
####################################################################################################
NNS.cor(corrTable$IOP, corrTable$ANGPT2)
NNS.cor(corrTable$IOP, corrTable$PTPRB)
NNS.cor(corrTable$IOP, corrTable$TEK)                  # R (IOP_TEK) = 0.8501074
plot(corrTable$IOP, corrTable$TEK)
plot(corrTable$IOP, corrTable$TEK)
NNS.cor(corrTable$IOP, corrTable$TEK)                  # R (IOP_TEK) = 0.8501074
NNS.cor(corrTable$ANGPT2, corrTable$TEK)               # R (ANGPT2_TEK) = 0.5067027
plot(corrTable$ANGPT2, corrTable$TEK)
NNS.cor(corrTable$PTPRB, corrTable$TEK, corrTable$TEK)
NNS.cor(corrTable$IOP, corrTable$ANGPT2, corrTable$PTPRB, corrTable$TEK)
NNS.cor(corrTable$IOP, corrTable$ANGPT2, corrTable$PTPRB, corrTable$TEK)
NNS.cor(corrTable$IOP, corrTable$ANGPT2, corrTable$TEK)
NNS.cor(corrTable$IOP, corrTable$TEK)
# selGenes <- subset(sub_genes_2, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
selGenes <- subset(sub_genes_r, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
# sub_genes_v <- read.csv("normalized_vst.csv", sep=",", header=TRUE)
# dim(sub_genes_v)
sub_genes_c <- read.csv("real_counts.csv", sep=",", header=TRUE)
dim(sub_genes_c)
# names(sub_genes_r)[32884] <- "IOP_norm"
# selGenes <- subset(sub_genes_r, select=c(IOP_norm, ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
# selGenes <- subset(sub_genes_v, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
selGenes <- subset(sub_genes_c, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
corrplot(cor(corrTable, method="spearman"), method="color", type="upper", order="hclust",
col=colorRampPalette(c("dodgerblue", "aliceblue", "brown1"))(7),
addCoef.col="black", tl.col="black", tl.cex=1, addrect=3)
corrTable <- cbind(sub_samples$Avg_IOP, selGenes)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK")
# names(corrTable) <- c("IOP", "IOP_norm", "ANGPT2", "PTPRB", "TEK")
summary(corrTable)     # Basic statistical analysis
######## Spearman Correlatoin ########
plot(corrTable$IOP, corrTable$ANGPT2)
corrplot(cor(corrTable, method="spearman"), method="color", type="upper", order="hclust",
col=colorRampPalette(c("dodgerblue", "aliceblue", "brown1"))(7),
addCoef.col="black", tl.col="black", tl.cex=1, addrect=3)
getwd()
# corrTable$IOP = (corrTable$IOP ^ Lambda - 1) / Lambda
##### Method 4: Log transformation #####
# corrTable$IOP <- log(corrTable$IOP)
# corrTable$IOP <- log2(corrTable$IOP)
# corrTable$IOP <- log10(corrTable$IOP)
##### Method 5: Square root transformation #####
# corrTable$IOP <- sqrt(corrTable$IOP)
##### Method 6: Cube root transformation #####
# corrTable$IOP <- kader:::cuberoot(corrTable$IOP)
##### Method 7: Dr. Chen Adjusting #####
df0 <- read.csv(file="../Dr_Chen/Dr_Chen.csv", header=T)
getwd()
# corrTable$IOP = (corrTable$IOP ^ Lambda - 1) / Lambda
##### Method 4: Log transformation #####
# corrTable$IOP <- log(corrTable$IOP)
# corrTable$IOP <- log2(corrTable$IOP)
# corrTable$IOP <- log10(corrTable$IOP)
##### Method 5: Square root transformation #####
# corrTable$IOP <- sqrt(corrTable$IOP)
##### Method 6: Cube root transformation #####
# corrTable$IOP <- kader:::cuberoot(corrTable$IOP)
##### Method 7: Dr. Chen Adjusting #####
df0 <- read.csv(file="../Dr.Chen/Dr_Chen.csv", header=T)
meta<-read.csv(file="../Dr.Chen/p50_iop_all_data.csv", header=T)
df0 <- subset(df0, 0 < IOP)
df0$sample <- gsub("s_", "", df0$sample)
df1 <- merge(df0, meta, by.x="sample", by.y="RatID")
df1$iop <- apply(df1[,c("OD1", "OD2", "OD3", "OS1", "OS2", "OS3")] , 1, mean)
plot(density(df1$IOP), main="Density plot for IOP")
plot(density(df1$iop), main="Density plot for iop")
plot(density(df1$iopage), main="Density plot for age-ajusted IOP")
df1$iopage <- df1$iop / df1$AgeInDays
plot(density(df1$iopage), main="Density plot for age-ajusted IOP")
ggplot(corrTable, aes(IOP)) + geom_density(fill="green")
ggplot(density(df1$IOP), aes(IOP)) + geom_density(fill="green")
ggplot(df1$IOP, aes(IOP)) + geom_density(fill="green")
ggplot(df1, aes(IOP)) + geom_density(fill="green")
plot(density(df1$IOP), main="Density plot for IOP") + ggtitle(label)
ggplot(df1, aes(IOP)) + geom_density(fill="green") + ggtitle(label)
ggplot(df1, aes(IOP)) + geom_density(fill="green") + ggtitle("Density plot for IOP")
ggplot(df1, aes(IOP)) + geom_density(fill="green") + ggtitle("Density plot for IOP")
ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
par(c(1,2))
ggplot(df1, aes(IOP)) + geom_density(fill="green") + ggtitle("Density plot for IOP")
ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
par(mfcol=c(1,2))
ggplot(df1, aes(IOP)) + geom_density(fill="green") + ggtitle("Density plot for IOP")
ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2, nrow=1)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2, nrow=1)
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + theme(axis.title.x=element_blank()) + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2, nrow=1)
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + theme(axis.title.y=element_blank()) + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2, nrow=1)
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2, nrow=1)
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_discrete(limits=c("10","12","14")) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_discrete(limits=c(10,12,14)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_discrete(limits=c(10:1:25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_discrete(breaks=c(10:1:25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_discrete(breaks=c(10,25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_discrete(breaks=c("10","25")) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_continuous(name="Speed of cars", limits=c(0, 30)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_continuous(name="IOP", limits=c(10:2:25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_continuous(name="IOP", limits=c(10:25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_continuous(name="IOP", limits=c(10:25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_continuous(name="IOP", limits=c(10,25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_continuous(name="IOP", limits=c(10,25,1)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_continuous(name="IOP", limits=c(10,17,25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_continuous(name="IOP", limits=c(10,25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + scale_x_discrete(limits=c(10, 25)) + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
gg1 <- ggplot(df1, aes(IOP)) + geom_density(fill="green") + ggtitle("Density plot for IOP")
gg2 <- ggplot(df1, aes(iopage)) + geom_density(fill="green") + ggtitle("Density plot for age-ajusted IOP")
ggarrange(gg1, gg2, ncol=2)
cor.test(df1$iopage, df1$ANGPT2_rlog, method="spearman")
plot(df1$iopage, df1$ANGPT2_rlog, main="correlation")
mtext(side=3, "rho=0.29, p=0.057")
abline(lm(df1$ANGPT2_rlog ~ df1$iopage))
dev.off()
shapiro.test(df1$iopage)
skewness(df1$iopage)
shapiro.test(df1$IOP)
skewness(df1$IOP)
# sub_genes_2 <- read.csv("normalized_log2.csv", sep=",", header=TRUE)
# dim(sub_genes_2)
# sub_genes_r <- read.csv("normalized_rlog.csv", sep=",", header=TRUE)
# sub_genes_r <- read.csv("normalized_rlog_IOP.csv", sep=",", header=TRUE)     # Genes + IOP
sub_genes_r <- read.csv("normalized_rlog_Michael.csv", sep=",", header=TRUE)   # Solution by Michael Love
dim(sub_genes_r)
# selGenes <- subset(sub_genes_2, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
selGenes <- subset(sub_genes_r, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
corrTable <- cbind(sub_samples$Avg_IOP, selGenes)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK")
# names(corrTable) <- c("IOP", "IOP_norm", "ANGPT2", "PTPRB", "TEK")
summary(corrTable)     # Basic statistical analysis
## Correlation ##
corrTable <- cbind(sub_samples$Avg_IOP, selGenes, df1$iopage)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK", "IOP_Age")
corrplot(cor(corrTable, method="spearman"), method="color", type="upper", order="hclust",
col=colorRampPalette(c("dodgerblue", "aliceblue", "brown1"))(7),
addCoef.col="black", tl.col="black", tl.cex=1, addrect=3)
cor.test(df1$iopage, df1$ANGPT2_rlog, method="spearman")
mtext(side=3, "rho=0.29, p=0.057")
abline(lm(df1$ANGPT2_rlog ~ df1$iopage))
dev.off()
plot(df1$iopage, df1$ANGPT2_rlog, main="correlation")
mtext(side=3, "rho=0.29, p=0.057")
abline(lm(df1$ANGPT2_rlog ~ df1$iopage))
ggarrange(ggANG, ggPT, ggTEK + rremove("x.text"), labels=c("ANGPT2", "PTPRB", "TEK"), ncol=3, nrow=1)
ggANG <- ggplot(corrTable, aes(x=IOP, y=ANGPT2, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top") + labs(y="Expression")
ggPT <- ggplot(corrTable, aes(x=IOP, y=PTPRB, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggTEK <- ggplot(corrTable, aes(x=IOP, y=TEK, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggarrange(ggANG, ggPT, ggTEK + rremove("x.text"), labels=c("ANGPT2", "PTPRB", "TEK"), ncol=3, nrow=1)
######## Spearman Correlatoin ########
plot(corrTable$IOP, corrTable$ANGPT2)
corrplot(cor(corrTable, method="spearman"), method="color", type="upper", order="hclust",
col=colorRampPalette(c("dodgerblue", "aliceblue", "brown1"))(7),
addCoef.col="black", tl.col="black", tl.cex=1, addrect=3)
######## Spearman Correlatoin ########
plot(corrTable$IOP, corrTable$ANGPT2)
corrplot(cor(corrTable, method="spearman"), method="color", type="upper", order="hclust",
col=colorRampPalette(c("dodgerblue", "aliceblue", "brown1"))(7),
addCoef.col="black", tl.col="black", tl.cex=1, addrect=3)
corrTable <- cbind(sub_samples$Class_IOP, corrTable)    # Correlation tables for three genes and three groups of IOP
names(corrTable)[1] <- "Class_IOP"
levels(corrTable$Class_IOP)
corrTable$Class_IOP <- relevel(corrTable$Class_IOP, "Normal")
levels(corrTable$Class_IOP)
corrTable_IOP2 <- corrTable    # Two subgroups of IOP
for (i in (1:45)) {if (corrTable_IOP2$Class_IOP[i] == "Elevated") {corrTable_IOP2$Class_IOP[i] <- "High"}}
corrTable_IOP2$Class_IOP <- factor(corrTable_IOP2$Class_IOP)    # Correlation tables for just two groups of IOP
levels(corrTable_IOP2$Class_IOP)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="blue",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=TRUE, xlab="IOP", ylab="Expression")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=12)
ggscatter(corrTable_IOP2, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=-3)
ggANG <- ggplot(corrTable, aes(x=IOP, y=ANGPT2, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top") + labs(y="Expression")
View(corrTable)
ggscatter(corrTable, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="blue",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=TRUE, xlab="IOP_Age", ylab="Expression")
cor.test(df1$iopage, df1$ANGPT2_rlog, method="spearman")
######## Spearman Correlatoin ########
plot(corrTable$IOP, corrTable$ANGPT2)
corrplot(cor(corrTable, method="spearman"), method="color", type="upper", order="hclust",
col=colorRampPalette(c("dodgerblue", "aliceblue", "brown1"))(7),
addCoef.col="black", tl.col="black", tl.cex=1, addrect=3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="blue",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=TRUE, xlab="IOP", ylab="Expression")
ggANG <- ggplot(corrTable, aes(x=IOP, y=ANGPT2, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top") + labs(y="Expression")
ggPT <- ggplot(corrTable, aes(x=IOP, y=PTPRB, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggTEK <- ggplot(corrTable, aes(x=IOP, y=TEK, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggarrange(ggANG, ggPT, ggTEK + rremove("x.text"), labels=c("ANGPT2", "PTPRB", "TEK"), ncol=3, nrow=1)
#### IOP_Age (Dr. Chen) #####
ggANG <- ggplot(corrTable, aes(x=IOP_Age, y=ANGPT2, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top") + labs(y="Expression")
ggPT <- ggplot(corrTable, aes(x=IOP_Age, y=PTPRB, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggTEK <- ggplot(corrTable, aes(x=IOP_Age, y=TEK, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggarrange(ggANG, ggPT, ggTEK + rremove("x.text"), labels=c("ANGPT2", "PTPRB", "TEK"), ncol=3, nrow=1)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="blue",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=TRUE, xlab="IOP", ylab="Expression")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=12)
#### IOP_Age (Dr. Chen) #####
ggscatter(corrTable, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP_Age", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=12)
#### IOP_Age (Dr. Chen) #####
ggscatter(corrTable, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP_Age", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=0)
#### IOP_Age (Dr. Chen) #####
ggscatter(corrTable, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP_Age", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=0.05)
#### IOP_Age (Dr. Chen) #####
ggscatter(corrTable, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP_Age", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=-0.05)
#### IOP_Age (Dr. Chen) #####
ggscatter(corrTable, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP_Age", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=-0.15)
ggPT <- ggplot(corrTable, aes(x=IOP, y=PTPRB, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="blue",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=TRUE, xlab="IOP", ylab="Expression")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=12)
ggscatter(corrTable_IOP2, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=-3)
ggscatter(corrTable_IOP2, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP_Age", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=-0.15)
ggscatter(corrTable_IOP2, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP_Age", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=-0.05)
ggscatter(corrTable_IOP2, x="IOP_Age", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP_Age", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=0.05)
View(sub_samples)
summary(sub_samples$AgeInDays)
aaa<-(sub_samples$AgeInDays)
sort(aaa)
sort(aaa)
sort(aaa)
sort(aaa)
sort(aaa)
sort(aaa)
dim(sub_samples)
for (i in (1:45)) {
if (113 <= samples$AgeInDays[i] & samples$AgeInDays[i] < 138) {samples$Class_Age[i] <- "Adolescent"}
else if (138 <= samples$AgeInDays[i] & samples$AgeInDays[i] < 158) {samples$Class_Age[i] <- "Adult"}
else {samples$Class_Age[i] <- "Aged"} }
if (113 <= samples$AgeInDays[i] & samples$AgeInDays[i] < 138) {samples$Class_Age3[i] <- "Adolescent"}
for (i in (1:45)) {
if (113 <= samples$AgeInDays[i] & samples$AgeInDays[i] < 138) {samples$Class_Age3[i] <- "Adolescent"}
else if (138 <= samples$AgeInDays[i] & samples$AgeInDays[i] < 158) {samples$Class_Age3[i] <- "Adult"}
else {samples$Class_Age3[i] <- "Aged"} }
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 138) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (138 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 158) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
write.table(sub_samples, file="samples45.csv", sep=",", quote=F, row.names=TRUE, col.names=TRUE,)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age), label.x=12)
corrTable <- cbind(sub_samples$Avg_IOP, selGenes)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK")
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Sex, sub_samples$Batch, corrTable)
names(corrTable)[1:3] <- c("Age", "Sex", "Batch")
levels(corrTable$Age)
levels(corrTable$Sex)
levels(corrTable$Batch)
corrTable <- cbind(sub_samples$Avg_IOP, selGenes)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK")
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, corrTable)
names(corrTable)[1:3] <- c("Age", "Age3", "Sex", "Batch")
levels(corrTable$Age)
levels(corrTable$Age3)
levels(corrTable$Sex)
levels(corrTable$Batch)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age), label.x=12)
ggscatter(corrTable, x="ANGPT2", y=c("PTPRB", "TEK"), size=3, shape=19, color="Age",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="ANGPT2", ylab="Expression") +
stat_cor(aes(color=Age), label.x=6.3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age), label.x=12)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=12)
ggscatter(corrTable, x="ANGPT2", y=c("PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="ANGPT2", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=6.3)
