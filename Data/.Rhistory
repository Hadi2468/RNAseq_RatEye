Packages <- c("tximport", "DESeq2", "tidyverse", "ggplot2")
lapply(Packages, library, character.only = TRUE)
###################################################
### Step 1: Import 53 samples' information file ###
###################################################
dir <- setwd("./datasets"); getwd()
getwd()
###################################################
### Step 1: Import 53 samples' information file ###
###################################################
dir <- setwd("./RNAseq_RatEye/datasets"); getwd()
getwd()
setwd("../")
getwd()
setwd("../RNAseq_RatEye/datasets"); getwd()
getwd()
setwd("../RNAseq_RatEye"); getwd()
setwd("./RNAseq_RatEye"); getwd()
pheatmap(cor(corrTable))
Packages <- c("tximport", "tximportData", "DESeq2", "tidyverse", "dplyr", "vctrs", "fs", "ggplot2")
lapply(Packages, library, character.only = TRUE)
###################################################
### Step 1: Import 53 samples' information file ###
###################################################
getwd()
setwd("./Data"); getwd()
samples <- read.csv("samples53.csv", sep=",", header=TRUE)
#   else {samples$Class_Age[i] <- "A4_Aged"} }
# for (i in (1:length(samples$Batch))) {
#   samples$Batch[i] <- if(samples$Batch[i] == "12") "B12" else if(samples$Batch[i] == "13") "B13" else if(samples$Batch[i] == "14") "B14" else "B15" }
# for (i in (1:length(samples$Class))) {
#   samples$Class[i] <- if(samples$Class[i] == "H") "High" else if(samples$Class[i] == "E") "Elevated" else "Normal" }
# samples <- new_samples[complete.cases(new_samples), ]         # remove 8 samples which have no IOP data ("NA")
# dim(samples)
# head(samples)
# samples$Class_OD <- relevel(samples$Class_OD, "Normal")
# samples$Class_OS <- relevel(samples$Class_OS, "Normal")
samples$Class_IOP <- relevel(samples$Class_IOP, "Normal")
##########################################################################################
### Step 2: Import RSEM outputs(transcripts aboundance estimation) file using tximport ###
##########################################################################################
setwd("./rsem_export_dataset"); getwd()
RSEM_output_gene_files <- file.path(getwd(), paste0(samples$sample, ".genes.results"))
names(RSEM_output_gene_files) <- samples$sample
txi.rsem <- tximport(RSEM_output_gene_files, type="rsem", txIn=FALSE, txOut=FALSE)
########### Add IOP as gene for normalization ##########
txi.rsem$counts <- rbind(txi.rsem$counts, t(samples$Avg_IOP))
txi.rsem$abundance <- rbind(txi.rsem$abundance, txi.rsem$abundance[32883,])
txi.rsem$length <- rbind(txi.rsem$length, txi.rsem$length[32883,])
#########################################################################################
### Step 3: Producing the DESeq2 data frame based on the outputs of Step 1 and Step 2 ###
#########################################################################################
# colnames(txi.rsem$counts)
# row.names(samples)
txi.rsem$length[txi.rsem$length == 0] <- 1
dds <- DESeqDataSetFromTximport(txi.rsem, samples, design=~1)    # Solution of Michael Love
#################################################
### Step 4: Normalization based on rlog & vsd ###
#################################################
setwd("../"); getwd()
# vsd <- vst(dds, blind=TRUE)      # Variance Stabilizing Transformation
rld <- rlog(dds, blind=FALSE)     # Regularized Log Transformation
# dim(txi.rsem$counts)
# dim(assay(vsd))
dim(assay(rld))
RSEM_output_gene_files <- file.path(getwd(), paste0(samples$sample, ".genes.results"))
names(RSEM_output_gene_files) <- samples$sample
txi.rsem <- tximport(RSEM_output_gene_files, type="rsem", txIn=FALSE, txOut=FALSE)
#########################################################################################
### Step 3: Producing the DESeq2 data frame based on the outputs of Step 1 and Step 2 ###
#########################################################################################
# colnames(txi.rsem$counts)
# row.names(samples)
txi.rsem$length[txi.rsem$length == 0] <- 1
# dds <- DESeqDataSetFromTximport(txi.rsem, samples, ~sample)
dds <- DESeqDataSetFromTximport(txi.rsem, samples, design=~1)    # Solution of Michael Love
getwd()
#################################################
### Step 4: Normalization based on rlog & vsd ###
#################################################
setwd("../"); getwd()
library(mgcv)
install.packages(mgcv-package)
install.packages("mgcv")
install.packages("mgcv")
library(mgcv)
install.packages("nlme")
install.packages("nlme")
library(mgcv)
install.packages("mgcv-package")
install.packages("mgcv")
install.packages("mgcv")
library(mgcv)
install.packages("gam")
library(mgcv)
install.packages("gam")
library(mgcv)
library(ggplot2)
# fake data
n <- 50
sig <- 2
dat <- gamSim(1,n=n,scale=sig)
View(dat)
plot(dat$x1)
plot(dat$x2)
plot(dat$x3)
plot(dat$x3, dat$x0)
plot(dat$x3, dat$x1)
# P-spline smoothers (with lambda=0.6) used for x1 and x2; x3 is parametric.
b1 <- mgcv::gam(y ~ s(x1, bs='ps', sp=0.6) + s(x2, bs='ps', sp=0.6) + x3, data = dat)
summary(b1)
plot(b1)
bb1 <- mgcv::gam(y ~ x1 + x2 + x3, data = dat)
summary(bb1)
plot(bb1)
bb1 <- mgcv::gam(y ~ s(x1) + s(x2) + s(x3), data = dat)
summary(bb1)
plot(bb1)
beta <- coef(b1)[grepl("x1", names(coef(b1)))]
s <- p[,grepl("x1", colnames(p))] %*% beta
ggplot(data=cbind.data.frame(s, dat$x1), aes(x=dat$x1, y=s)) + geom_line()
# predict
newdf <- gamSim(1,n=n,scale=sig)
f <- predict(b1, newdata=newdf)
# select smoothing parameters with REML, using P-splines
b2 <- mgcv::gam(y ~ s(x1, bs='ps') + s(x2, bs='ps') + x3, data = dat, method="REML")
# select variables and smoothing parameters
b3 <- mgcv::gam(y ~ s(x0) + s(x1) + s(x2) + s(x3) , data = dat, method="REML", select=TRUE)
# loess smoothers with the gam package (restart R before loading gam)
library(gam)
b4 <- gam::gam(y ~ lo(x1, span=0.6) + lo(x2, span=0.6) + x3, data = dat)
gam(dat ~ s(x1), data = dat, method = "REML")
gam(dat$y ~ s(x1), data = dat, method = "REML")
gam(dat$y ~ s(x1), data = dat)
plot(dat$y)
plot(dat$y, dat$x1)
mm<- gam(dat$y ~ s(x1), data = dat)
plot(mm)
plot(dat$y, dat$x1)
plot(dat$x1, dat$y)
plot(mm)
plot(dat$x1, dat$y)
plot(mm)
plot(dat$x1, dat$y)
plot(mm)
mm<- gam(dat$y ~ x1, data = dat)
plot(dat$x1, dat$y)
plot(mm)
par(mfrow = c(2,2))
gam.check(mm)
par(mfrow = c(1,1))
gam.check(mm)
Packages <- c("tximport", "tximportData", "DESeq2", "tidyverse", "dplyr", "vctrs", "fs", "ggplot2",
"kader", "remotes", "nlcor", "corrplot", "RColorBrewer", "ggpubr", "pheatmap", "NNS",
"ppcor", "BBmisc", "rcompanion", "caret", "moments", "devtools", "readxl", "mgcv")
lapply(Packages, library, character.only=TRUE)
####################################################
### Step 1: Import 45 samples' information files ###
####################################################
getwd()
setwd("./Data"); getwd()
# samples <- read.csv("samples53.csv", sep=",", header=TRUE)
sub_samples <- read.csv("samples45.csv", sep=",", header=TRUE)
dim(sub_samples)
View(sub_samples)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 156) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
write.table(sub_samples, file="samples45.csv", sep=",", quote=F, row.names=TRUE, col.names=TRUE,)
# sub_genes_2 <- read.csv("normalized_log2.csv", sep=",", header=TRUE)
# dim(sub_genes_2)
# sub_genes_r <- read.csv("normalized_rlog.csv", sep=",", header=TRUE)
# sub_genes_r <- read.csv("normalized_rlog_IOP.csv", sep=",", header=TRUE)     # Genes + IOP
sub_genes_r <- read.csv("normalized_rlog_Michael.csv", sep=",", header=TRUE)   # Solution by Michael Love
dim(sub_genes_r)
# selGenes <- subset(sub_genes_2, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
selGenes <- subset(sub_genes_r, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
corrTable <- cbind(sub_samples$Avg_IOP, selGenes)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK")
# names(corrTable) <- c("IOP", "IOP_norm", "ANGPT2", "PTPRB", "TEK")
summary(corrTable)     # Basic statistical analysis
######## Spearman Correlatoin ########
plot(corrTable$IOP, corrTable$ANGPT2)
corrplot(cor(corrTable, method="spearman"), method="color", type="upper", order="hclust",
col=colorRampPalette(c("dodgerblue", "aliceblue", "brown1"))(7),
addCoef.col="black", tl.col="black", tl.cex=1, addrect=3)
corrTable <- cbind(sub_samples$Class_IOP, corrTable)    # Correlation tables for three genes and three groups of IOP
names(corrTable)[1] <- "Class_IOP"
levels(corrTable$Class_IOP)
corrTable$Class_IOP <- relevel(corrTable$Class_IOP, "Normal")
levels(corrTable$Class_IOP)
corrTable_IOP2 <- corrTable    # Two subgroups of IOP
for (i in (1:45)) {if (corrTable_IOP2$Class_IOP[i] == "Elevated") {corrTable_IOP2$Class_IOP[i] <- "High"}}
corrTable_IOP2$Class_IOP <- factor(corrTable_IOP2$Class_IOP)    # Correlation tables for just two groups of IOP
levels(corrTable_IOP2$Class_IOP)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="blue",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=TRUE, xlab="IOP", ylab="Expression")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=12)
ggscatter(corrTable_IOP2, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Class_IOP",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=TRUE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Class_IOP), label.x=-3)
ggANG <- ggplot(corrTable, aes(x=IOP, y=ANGPT2, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top") + labs(y="Expression")
ggPT <- ggplot(corrTable, aes(x=IOP, y=PTPRB, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggTEK <- ggplot(corrTable, aes(x=IOP, y=TEK, color=Class_IOP)) + scale_size_manual(values=c(2,2,2)) +
geom_point(aes(size=Class_IOP)) + geom_smooth(method=lm, aes(fill=Class_IOP), se=FALSE, fullrange=TRUE) +
theme(legend.position="top", axis.title.y = element_blank())
ggarrange(ggANG, ggPT, ggTEK + rremove("x.text"), labels=c("ANGPT2", "PTPRB", "TEK"), ncol=3, nrow=1)
corrTable <- cbind(sub_samples$Avg_IOP, selGenes)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK")
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, corrTable)
names(corrTable)[1:3] <- c("Age", "Age3", "Sex", "Batch")
levels(corrTable$Age)
levels(corrTable$Age3)
levels(corrTable$Sex)
levels(corrTable$Batch)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 156) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable)[1:3] <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
View(selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
levels(corrTable$Age3)
View(corrTable)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=12)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 157) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
levels(corrTable$Age3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 159) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
levels(corrTable$Age3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 161) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
levels(corrTable$Age3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 167) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
levels(corrTable$Age3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 175) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
levels(corrTable$Age3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 177) {sub_samples$Class_Age3[i] <- "Adult"}
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 177) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
levels(corrTable$Age3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 135) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (135 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 167) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 133) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (133 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 154) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 131) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (131 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 154) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 129) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (129 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 154) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 128) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (128 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 154) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 127) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (127 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 154) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 126) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (126 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 154) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 121) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (121 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 154) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 121) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (121 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 154) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 126) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (126 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 167) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 121) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (121 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 167) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 126) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (126 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 175) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 126) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (126 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 167) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=0)
sort(sub_samples$AgeInDays)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=-5)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=-5)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=-15)
sort(sub_samples$AgeInDays)
for (i in (1:45)) {
if (113 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 127) {sub_samples$Class_Age3[i] <- "Adolescent"}
else if (127 <= sub_samples$AgeInDays[i] & sub_samples$AgeInDays[i] < 167) {sub_samples$Class_Age3[i] <- "Adult"}
else {sub_samples$Class_Age3[i] <- "Aged"} }
corrTable <- cbind(sub_samples$Class_Age, sub_samples$Class_Age3, sub_samples$Sex, sub_samples$Batch, sub_samples$Avg_IOP, selGenes)
names(corrTable) <- c("Age", "Age3", "Sex", "Batch", "IOP", "ANGPT2", "PTPRB", "TEK")
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=-15)
sort(sub_samples$AgeInDays)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
sort(sub_samples$AgeInDays)
ggscatter(corrTable, x="ANGPT2", y=c("PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="ANGPT2", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=6.3)
write.table(sub_samples, file="samples45.csv", sep=",", quote=F, row.names=TRUE, col.names=TRUE,)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=3)
ggscatter(corrTable, x="IOP", y=c("ANGPT2", "PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="IOP", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=5)
ggscatter(corrTable, x="ANGPT2", y=c("PTPRB", "TEK"), size=3, shape=19, color="Age3",
cor.method="spearman", title="Correlation: Spearman,    Normalization: rlog", combine=TRUE,
add="reg.line", conf.int=FALSE, cor.coef=FALSE, xlab="ANGPT2", ylab="Expression") +
stat_cor(aes(color=Age3), label.x=6.3)
