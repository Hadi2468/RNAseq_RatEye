getwd()
setwd("../RNAseq_RatEye/datasets"); getwd()
getwd()
setwd("../RNAseq_RatEye"); getwd()
setwd("./RNAseq_RatEye"); getwd()
pheatmap(cor(corrTable))
Packages <- c("tximport", "tximportData", "DESeq2", "tidyverse", "dplyr", "vctrs", "fs", "ggplot2")
lapply(Packages, library, character.only = TRUE)
###################################################
### Step 1: Import 53 samples' information file ###
###################################################
getwd()
setwd("./Data"); getwd()
samples <- read.csv("samples53.csv", sep=",", header=TRUE)
#   else {samples$Class_Age[i] <- "A4_Aged"} }
# for (i in (1:length(samples$Batch))) {
#   samples$Batch[i] <- if(samples$Batch[i] == "12") "B12" else if(samples$Batch[i] == "13") "B13" else if(samples$Batch[i] == "14") "B14" else "B15" }
# for (i in (1:length(samples$Class))) {
#   samples$Class[i] <- if(samples$Class[i] == "H") "High" else if(samples$Class[i] == "E") "Elevated" else "Normal" }
# samples <- new_samples[complete.cases(new_samples), ]         # remove 8 samples which have no IOP data ("NA")
# dim(samples)
# head(samples)
# samples$Class_OD <- relevel(samples$Class_OD, "Normal")
# samples$Class_OS <- relevel(samples$Class_OS, "Normal")
samples$Class_IOP <- relevel(samples$Class_IOP, "Normal")
##########################################################################################
### Step 2: Import RSEM outputs(transcripts aboundance estimation) file using tximport ###
##########################################################################################
setwd("./rsem_export_dataset"); getwd()
RSEM_output_gene_files <- file.path(getwd(), paste0(samples$sample, ".genes.results"))
names(RSEM_output_gene_files) <- samples$sample
txi.rsem <- tximport(RSEM_output_gene_files, type="rsem", txIn=FALSE, txOut=FALSE)
########### Add IOP as gene for normalization ##########
txi.rsem$counts <- rbind(txi.rsem$counts, t(samples$Avg_IOP))
txi.rsem$abundance <- rbind(txi.rsem$abundance, txi.rsem$abundance[32883,])
txi.rsem$length <- rbind(txi.rsem$length, txi.rsem$length[32883,])
#########################################################################################
### Step 3: Producing the DESeq2 data frame based on the outputs of Step 1 and Step 2 ###
#########################################################################################
# colnames(txi.rsem$counts)
# row.names(samples)
txi.rsem$length[txi.rsem$length == 0] <- 1
dds <- DESeqDataSetFromTximport(txi.rsem, samples, design=~1)    # Solution of Michael Love
#################################################
### Step 4: Normalization based on rlog & vsd ###
#################################################
setwd("../"); getwd()
# vsd <- vst(dds, blind=TRUE)      # Variance Stabilizing Transformation
rld <- rlog(dds, blind=FALSE)     # Regularized Log Transformation
# dim(txi.rsem$counts)
# dim(assay(vsd))
dim(assay(rld))
RSEM_output_gene_files <- file.path(getwd(), paste0(samples$sample, ".genes.results"))
names(RSEM_output_gene_files) <- samples$sample
txi.rsem <- tximport(RSEM_output_gene_files, type="rsem", txIn=FALSE, txOut=FALSE)
#########################################################################################
### Step 3: Producing the DESeq2 data frame based on the outputs of Step 1 and Step 2 ###
#########################################################################################
# colnames(txi.rsem$counts)
# row.names(samples)
txi.rsem$length[txi.rsem$length == 0] <- 1
# dds <- DESeqDataSetFromTximport(txi.rsem, samples, ~sample)
dds <- DESeqDataSetFromTximport(txi.rsem, samples, design=~1)    # Solution of Michael Love
getwd()
#################################################
### Step 4: Normalization based on rlog & vsd ###
#################################################
setwd("../"); getwd()
Packages <- c("tximport", "tximportData", "DESeq2", "tidyverse", "dplyr", "vctrs", "fs", "ggplot2",
"kader", "remotes", "nlcor", "corrplot", "RColorBrewer", "ggpubr", "pheatmap",
"ppcor", "BBmisc", "rcompanion", "caret", "moments", "devtools")
lapply(Packages, library, character.only=TRUE)
getwd()
setwd("./Data"); getwd()
samples <- read.csv("samples53.csv", sep=",", header=TRUE)
sub_samples <- read.csv("samples45.csv", sep=",", header=TRUE)
dim(sub_samples)
# sub_genes_2 <- read.csv("normalized_log2.csv", sep=",", header=TRUE)
# dim(sub_genes_2)
# sub_genes_r <- read.csv("normalized_rlog.csv", sep=",", header=TRUE)
# sub_genes_r <- read.csv("normalized_rlog_IOP.csv", sep=",", header=TRUE)     # Genes + IOP
sub_genes_r <- read.csv("normalized_rlog_Michael.csv", sep=",", header=TRUE)   # Solution by Michael Love
dim(sub_genes_r)
# selGenes <- subset(sub_genes_2, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
selGenes <- subset(sub_genes_r, select=c(ENSRNOG00000016696_Angpt2, ENSRNOG00000055293_Ptprb, ENSRNOG00000008587_Tek))
corrTable <- cbind(sub_samples$Avg_IOP, selGenes)    # Correlation tables for three genes
names(corrTable) <- c("IOP", "ANGPT2", "PTPRB", "TEK")
# names(corrTable) <- c("IOP", "IOP_norm", "ANGPT2", "PTPRB", "TEK")
summary(corrTable)     # Basic statistical analysis
plot(corrTable$IOP, corrTable$ANGPT2)
plot(IOP, ANGPT2, data=corrTable)
plot(IOP, ANGPT2, corrTable)
plot(corrTable$ANGPT2, corrTable$IOP)
plot(corrTable$IOP, corrTable$ANGPT2)
plot(corrTable$ANGPT2, corrTable$IOP)
cor(corrTable$ANGPT2, corrTable$IOP)
cor(corrTable$IOP, corrTable$ANGPT2)
nonlinear.cor <- nlcor(corrTable$ANGPT2, corrTable$IOP, plt=T)
print(nonlinear.cor$cor.plot)
x= (
84.7
55.7
51.7
62
80.9
84.2
48.2
61.6
72.8
76.9
58.2
85.8
74.6
54.3
56
64.8
79.5
84.3
97.1
59.9
33.1
30.6
90.4
90.8
90.1
76
75.5
49
35.6
86.9
82.9
55.3
73.5
75.4
72
78.1
91
87.6
67.4
78.8
62.7
77.3
67
44
95.5
78.1
82.6
51.9
60.2
61.9
59.9
88.2
71.1
58.2
47.8
80
65.5
53.8
82.9
60.2
86.4
88.8
85.9
99
59.8)
x1=
84.7
55.7
51.7
62
80.9
84.2
48.2
61.6
72.8
76.9
58.2
85.8
74.6
54.3
56
64.8
79.5
84.3
97.1
59.9
33.1
30.6
90.4
90.8
90.1
76
75.5
49
35.6
86.9
82.9
55.3
73.5
75.4
72
78.1
91
87.6
67.4
78.8
62.7
77.3
67
44
95.5
78.1
82.6
51.9
60.2
61.9
59.9
88.2
71.1
58.2
47.8
80
65.5
53.8
82.9
60.2
86.4
88.8
85.9
99
59.8
getwd()
tt <- read.xlsx("test.xlsx", sep=",", header=TRUE)
tt <- read.xlsx("test.xlsx", 1)
# install.packages("ggpubr")
# install.packages("pheatmap")
# install.packages("ppcor")
# install.packages("rcompanion")
# install.packages("caret")
# install.packages("kader")
# install.packages("moments")
# install.packages("remotes")
# remotes::install_github("ProcessMiner/nlcor")
# remove.packages("nlcor")
install.packages("readxl")
install.packages("readxl")
Packages <- c("tximport", "tximportData", "DESeq2", "tidyverse", "dplyr", "vctrs", "fs", "ggplot2",
"kader", "remotes", "nlcor", "corrplot", "RColorBrewer", "ggpubr", "pheatmap",
"ppcor", "BBmisc", "rcompanion", "caret", "moments", "devtools", "readxl")
lapply(Packages, library, character.only=TRUE)
####################################################
### Step 1: Import 45 samples' information files ###
####################################################
tt <- read.xlsx("test.xlsx", 1)
getwd()
####################################################
### Step 1: Import 45 samples' information files ###
####################################################
tt <- read_excel("test.xlsx", 1)
View(tt)
plot(tt$x1, tt$y1)
nlcor(tt$x1, tt$y1)
nlcor(tt$x1, tt$y1, refine = 0.975, plt = T)
cor(corrTable$ANGPT2, corrTable$IOP)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.975, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.575, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.575, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.875, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.9975, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.95, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.93, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.9, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.8, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.89, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.88, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.885, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.888, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.889, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.5, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.88, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.888, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.889, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.8888, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.88889, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.3, plt=T)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.5, plt=T)
View(corrTable)
cor(corrTable$ANGPT2, corrTable$IOP)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.5, plt=T)
nlcor(tt$x1, tt$y1, refine = 0.5, plt=T)
View(tt)
nlcor(corrTable$ANGPT2, corrTable$IOP, refine = 0.5, plt=T)
sum(is.null(tt[[1]]))
sum(is.null(tt[[2]]))
sum(is.null(corrTable[[2]]))
sum(is.null(corrTable[[200]]))
sum(is.null(corrTable[1,1]]))
sum(is.null(corrTable[1,1]))
sum(is.null(corrTable[1,]))
sum(is.null(corrTable[,1]))
sum(is.null(corrTable[,2]))
sum(is.null(corrTable[,3]))
corrTable[,3]
corrTable[,1]
sum(is.null(corrTable[,1]))
if(!is.null(tt[,1])) {k=1}
if(!is.null(tt[,2])) {k=1}
if(!is.null(tt[,3])) {k=1}
if(!is.null(corrTable[,2])) {k=1}
if(!is.null(corrTable[,2])) {k=2}
if(!is.null(corrTable[,1])) {k=2}
if(!is.null(corrTable[,3])) {k=2}
if(!is.null(corrTable[,4])) {k=2}
class(tt[,1])
class(tt$x1)
class(tt$y1)
class(corrTable$IOP)
class(corrTable$ANGPT2)
class(corrTable$TEK)
class(corrTable$PTPRB)
cor(corrTable$ANGPT2, corrTable$PTPRB)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.5, plt=T)
class(tt)
class(corrTable)
aaa<-corrTable$ANGPT2
class(aaa)
aaa
aaa<-tt$x1
class(aaa)
aaa
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.5, plt=T)
length(tt$x1)
length(corrTable$IOP)
nlcor(corrTable$ANGPT2, corrTable$PTPRB)
nlcor(corrTable$ANGPT2, corrTable$PTPRB)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.5,)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.5, plt=T)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.5, plt=F)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.975)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.5)
nlcor(corrTable$IOP, corrTable$PTPRB, refine = 0.5)
nlcor(tt$x1, tt$y1, refine = 0.5)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.5)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.9)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.8)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.7)
cor(corrTable$ANGPT2, corrTable$IOP)
nlcor(corrTable$IOP, corrTable$ANGPT2, plt=T)
cor(corrTable$ANGPT2, corrTable$PTPRB)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, plt=T)
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)
nlcor(corrTable$PTPRB, corrTable$ANGPT2)
nlcor(corrTable$IOP, corrTable$ANGPT2, plt=T)
cor(corrTable$ANGPT2, corrTable$PTPRB)
cor(corrTable$ANGPT2, corrTable$PTPRB)
cor(corrTable$ANGPT2, corrTable$PTPRB, plt=T)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, plt=T)
nlcor(corrTable$PTPRB, corrTable$ANGPT2)
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)
nlcor(corrTable$IOP, corrTable$ANGPT2)
nlcor(corrTable$IOP, corrTable$PTPRB)
nlcor(corrTable$IOP, corrTable$TEK)
nlcor(corrTable$ANGPT2, corrTable$PTPRB)
nlcor(corrTable$ANGPT2, corrTable$TEK)
nlcor(corrTable$PTPRB, corrTable$TEK)
nlcor(corrTable$IOP, corrTable$ANGPT2)
nlcor(corrTable$IOP, corrTable$PTPRB)
nlcor(corrTable$IOP, corrTable$TEK)
nlcor(corrTable$ANGPT2, corrTable$PTPRB)
nlcor(corrTable$ANGPT2, corrTable$TEK)
nlcor(corrTable$PTPRB, corrTable$TEK)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.7)
nlcor(corrTable$IOP, corrTable$PTPRB, refine = 0.7)
nlcor(corrTable$IOP, corrTable$TEK, refine = 0.7)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.7)
nlcor(corrTable$ANGPT2, corrTable$TEK, refine = 0.7)
nlcor(corrTable$PTPRB, corrTable$TEK, refine = 0.7)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.9)
nlcor(corrTable$IOP, corrTable$PTPRB, refine = 0.9)
nlcor(corrTable$IOP, corrTable$TEK, refine = 0.9)
nlcor(corrTable$ANGPT2, corrTable$PTPRB, refine = 0.9)
nlcor(corrTable$ANGPT2, corrTable$TEK, refine = 0.9)
nlcor(corrTable$PTPRB, corrTable$TEK, refine = 0.9)
nlcor(corrTable$TEK, corrTable$IOP, plt=T)
nlcor(corrTable$TEK, corrTable$IOP)
nlcor(corrTable$TEK, corrTable$IOP)
IOP
nlcor(corrTable$IOP, corrTable$IOP)
nlcor(corrTable$ANGPT2, corrTable$ANGPT2)
nlcor(corrTable$PTPRB, corrTable$PTPRB)
nlcor(corrTable$TEK, corrTable$TEK)
nlcor(corrTable$IOP, corrTable$IOP)
nlcor(corrTable$IOP, corrTable$ANGPT2)
nlcor(corrTable$IOP, corrTable$PTPRB)
nlcor(corrTable$IOP, corrTable$TEK)
nlcor(corrTable$ANGPT2, corrTable$IOP)
nlcor(corrTable$ANGPT2, corrTable$ANGPT2)
nlcor(corrTable$ANGPT2, corrTable$PTPRB)
nlcor(corrTable$ANGPT2, corrTable$TEK)
nlcor(corrTable$PTPRB, corrTable$IOP)
nlcor(corrTable$PTPRB, corrTable$ANGPT2)
nlcor(corrTable$PTPRB, corrTable$ANGPT2)
nlcor(corrTable$PTPRB, corrTable$PTPRB)
nlcor(corrTable$PTPRB, corrTable$TEK)
nlcor(corrTable$TEK, corrTable$IOP)
nlcor(corrTable$TEK, corrTable$IOP)
nlcor(corrTable$TEK, corrTable$IOP)
nlcor(corrTable$TEK, corrTable$ANGPT2)
nlcor(corrTable$TEK, corrTable$PTPRB)
nlcor(corrTable$TEK, corrTable$TEK)
nlcor(corrTable$TEK, corrTable$PTPRB)
nlcor(corrTable$TEK, corrTable$IOP)           # R=0.4438115     p=0.01823332
nlcor(corrTable$TEK, corrTable$IOP)           # R=0.4438115     p=0.01823332
nlcor(corrTable$TEK, corrTable$IOP, plt=T)           # R=0.4438115     p=0.01823332
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$TEK, corrTable$IOP, plt=T)            # R=0.4438115     p=0.01823332
nlcor(corrTable$TEK, corrTable$PTPRB, plt=T)          # R=0.3986897     p=0.01190667
cor(corrTable$ANGPT2, corrTable$IOP)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.7)
nlcor(corrTable$PTPRB, corrTable$ANGPT2, refine = 0.7, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$PTPRB, corrTable$ANGPT2, refine = 0.6, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$PTPRB, corrTable$ANGPT2, refine = 0.5, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$PTPRB, corrTable$ANGPT2, refine = 1, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$PTPRB, corrTable$ANGPT2, refine = 0.975, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$PTPRB, corrTable$ANGPT2, refine = 0.985, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$PTPRB, corrTable$ANGPT2, refine = 0.95, plt=T)       # R=0.3664747    p=0.006690839
nlcor(corrTable$PTPRB, corrTable$PTPRB, refine = 0.95)
nlcor(corrTable$IOP, corrTable$IOP, refine = 0.95)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.95)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.99)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.999999)
samples
samples
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.999999)
nlcor(corrTable$IOP, corrTable$PTPRB)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.1)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.5)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.8)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.6)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.7)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.8)
nlcor(corrTable$IOP, corrTable$ANGPT2, refine = 0.9)
nlcor(corrTable$PTPRB, corrTable$IOP, refine = 0.9)
nlcor(corrTable$PTPRB, corrTable$IOP, refine = 0.5)
nlcor(corrTable$PTPRB, corrTable$IOP, refine = 0.5)
nlcor(corrTable$PTPRB, corrTable$IOP, refine = 0.7)
nlcor(corrTable$PTPRB, corrTable$IOP, refine = 0.8)
nlcor(corrTable$PTPRB, corrTable$IOP, refine = 0.9)
nlcor(corrTable$PTPRB, corrTable$IOP, refine = 0.99)
nlcor(corrTable$PTPRB, corrTable$IOP, refine = 0.8)
## Not run:
set.seed(123)
## Pairwise Correlation
x <- rnorm(100) ; y <- rnorm(100)
NNS.cor(x, y)
install.packages("NNS")
library(NNS)
install.packages('NNS')
install.packages("NNS")
library(NNS)
## Not run:
set.seed(123)
## Pairwise Correlation
x <- rnorm(100) ; y <- rnorm(100)
NNS.cor(x, y)
## Correlation Matrix
x <- rnorm(100) ; y <- rnorm(100) ; z<-rnorm(100)
B <- cbind(x, y, z)
NNS.cor(B)
cor(corrTable$ANGPT2, corrTable$IOP)
NNS.cor(corrTable$ANGPT2, corrTable$IOP)
NNS.cor(corrTable$IOP, corrTable$IOP)
NNS.cor(corrTable$IOP, corrTable$ANGPT2)
NNS.cor(corrTable$IOP, corrTable$PTPRB)
NNS.cor(corrTable$IOP, corrTable$TEK)
NNS.cor(corrTable$ANGPT2, corrTable$IOP)
NNS.cor(corrTable$ANGPT2, corrTable$ANGPT2)
NNS.cor(corrTable$ANGPT2, corrTable$PTPRB)
NNS.cor(corrTable$ANGPT2, corrTable$TEK)
NNS.cor(corrTable$PTPRB, corrTable$IOP)
NNS.cor(corrTable$PTPRB, corrTable$ANGPT2)       # R=0.3664747    p=0.006690839
NNS.cor(corrTable$PTPRB, corrTable$PTPRB)
NNS.cor(corrTable$PTPRB, corrTable$TEK)
NNS.cor(corrTable$TEK, corrTable$IOP)            # R=0.4438115     p=0.01823332
NNS.cor(corrTable$TEK, corrTable$ANGPT2)
NNS.cor(corrTable$TEK, corrTable$PTPRB)          # R=0.3986897     p=0.01190667
NNS.cor(corrTable$TEK, corrTable$TEK)
######## Probability Density Function ########
ThreeGenes <- read.csv("ThreeGenes.csv", sep=",", header=TRUE)
plot(corrTable$IOP, corrTable$TEK)
plot(corrTable$TEK, corrTable$IOP)
plot(corrTable$IOP, corrTable$TEK)
nlcor(corrTable$PTPRB, corrTable$ANGPT2, plt=T)       # R=0.3664747    p=0.006690839
## NNS ##
NNS.cor(corrTable$IOP, corrTable$IOP)
NNS.cor(corrTable$IOP, corrTable$ANGPT2)
NNS.cor(corrTable$IOP, corrTable$PTPRB)
NNS.cor(corrTable$IOP, corrTable$TEK)
NNS.cor(corrTable$ANGPT2, corrTable$IOP)
NNS.cor(corrTable$ANGPT2, corrTable$ANGPT2)
NNS.cor(corrTable$ANGPT2, corrTable$PTPRB)
NNS.cor(corrTable$ANGPT2, corrTable$TEK)
plot(corrTable$ANGPT2, corrTable$TEK)
NNS.cor(corrTable$PTPRB, corrTable$IOP)
NNS.cor(corrTable$PTPRB, corrTable$ANGPT2)
NNS.cor(corrTable$PTPRB, corrTable$PTPRB)
NNS.cor(corrTable$PTPRB, corrTable$TEK)
NNS.cor(corrTable$TEK, corrTable$IOP)
NNS.cor(corrTable$TEK, corrTable$ANGPT2)
NNS.cor(corrTable$TEK, corrTable$PTPRB)
NNS.cor(corrTable$TEK, corrTable$TEK)
